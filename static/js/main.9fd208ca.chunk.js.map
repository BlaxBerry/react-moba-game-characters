{"version":3,"sources":["components/common/NavBar.tsx","components/common/TabBar.tsx","api/request.ts","components/common/SearchBar.tsx","api/index.ts","components/common/Loading.tsx","assets/logo.png","pages/Search/index.tsx","components/Cards/Cards.tsx","pages/Heroes/index.tsx","pages/Weapon/index.tsx","pages/HeroDetails/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavBar","props","useState","pageName","setPageName","pathname","useLocation","useEffect","back","style","position","top","width","height","backgroundColor","color","DEFAULT_TABS","key","title","icon","TeamOutline","badge","SearchOutline","AppstoreOutline","Badge","dot","TabBar","activeKey","setActiveKey","Navigation","useNavigate","onChange","value","setRouteActive","bottom","map","item","Item","instance","axios","create","baseURL","timeout","SearchBar","keyWord","setKeyword","navigation","getHero","a","name","get","data","console","log","id","heroId","state","Toast","show","content","msg","placeholder","borderRadius","margin","onSearch","Loading","display","justifyContent","alignItems","fontSize","Search","randomImg","setRandomImg","getRandomImg","url","src","logo","marginTop","textIndent","fit","Cards","columns","padding","list","onClick","pic","DEFAULT_SILDE_TABS","Heroes","setData","heroType","setHeroType","loading","setLoading","getHeroList","res","all","useMemo","filter","roles","includes","nameEN","alias","nameCN","keywords","left","paddingLeft","hidden","className","textAlign","length","Weapon","transform","HeroDetails","dataSource","setDataSource","viewerImage","setViewerImage","viewerShow","setViewerShow","getHeroDetails","hero","nickName","description","shortBio","type","extraInfo1","enemytips","extraInfo2","allytips","skills","spells","abilityIconPath","cooldown","cost","skins","emblemsName","iconImg","loadingImg","mainImg","sourceImg","tipsLayout","array","index","prefix","contentPosition","image","visible","onClose","App","paddingBottom","paddingTop","path","element","replace","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9fd208ca.chunk.js","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom'\nimport { NavBar as BaseNavBar } from 'antd-mobile'\n\nexport const NavBar = (props: any) => {\n    const [pageName, setPageName] = useState('')\n    const { pathname } = useLocation()\n\n    useEffect(() => {\n        switch (pathname) {\n            case \"/heroes\": return setPageName(\"英雄列表\")\n            case \"/search\": return setPageName(\"查询角色\")\n            case \"/weapons\": return setPageName(\"装备列表\")\n            case \"/detail\": return setPageName(\"角色详情\")\n            default: return setPageName(\"英雄联盟信息\")\n        }\n    }, [pathname])\n\n\n    return (\n        <BaseNavBar\n            back={null}\n            style={{\n                position: \"fixed\",\n                top: 0,\n                width: \"100%\",\n                height: \"50px\",\n                backgroundColor: \"teal\",\n                color: \"#fff\"\n            }}\n        >\n            {pageName}\n        </BaseNavBar>\n    )\n}\n","import React from 'react'\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router'\nimport { TabBar as BaseTabBar, Badge } from 'antd-mobile'\nimport {\n    TeamOutline,\n    AppstoreOutline,\n    SearchOutline,\n} from 'antd-mobile-icons'\n\nconst DEFAULT_TABS = [\n    {\n        key: '/heroes',\n        title: '英雄',\n        icon: <TeamOutline />,\n        badge: \"99+\",\n    },\n    {\n        key: '/search',\n        title: '查找',\n        icon: <SearchOutline />,\n        badge: null,\n    },\n    {\n        key: '/weapons',\n        title: '装备',\n        icon: <AppstoreOutline />,\n        badge: Badge.dot,\n    },\n]\n\nexport const TabBar = () => {\n    const [activeKey, setActiveKey] = useState('/heroes')\n\n    const Navigation = useNavigate()\n\n    const setRouteActive = (value: string) => {\n        setActiveKey(value)\n        Navigation(value)\n    }\n\n    return (\n        <BaseTabBar\n            activeKey={activeKey}\n            onChange={value => setRouteActive(value)}\n            style={{\n                position: \"fixed\",\n                bottom: 0,\n                width: \"100%\",\n                backgroundColor: \"teal\",\n                color: \"#fff\"\n            }}\n        >\n            {DEFAULT_TABS.map(item => (\n                <BaseTabBar.Item\n                    key={item.key}\n                    icon={item.icon}\n                    title={item.title}\n                    badge={item.badge}\n                />\n            ))}\n        </BaseTabBar>\n    )\n}\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://autumnfish.cn/api/lol',\n    timeout: 5000\n})\n\nexport default instance\n\n","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router'\nimport { searchHero } from '../../api/index'\nimport { SearchBar as BaseSearchBar, Toast } from 'antd-mobile'\n\ntype searchProps = {\n    placeholder: string,\n    style?: {},\n}\n\nexport const SearchBar = (props: searchProps) => {\n\n    const [keyWord, setKeyword] = useState(\"\")\n    const navigation = useNavigate()\n\n    const onSearch = (value: string) => {\n        setKeyword(value)\n        // Toast.show(`你搜索了：${value}`)\n        Toast.show({\n            icon: 'loading',\n            content: '加载中…',\n        })\n    }\n\n    const getHero = async () => {\n        const { data } = await searchHero(keyWord)\n        console.log(data);\n\n        if (!data.data) {\n            Toast.show({\n                icon: 'fail',\n                content: data.msg,\n            })\n        } else {\n            const id = data.data[0].heroId\n            navigation('/detail', {\n                state: { id }\n            })\n        }\n    }\n\n    useEffect(() => {\n        if (keyWord) {\n            getHero()\n        }\n    }, [keyWord])\n\n    return (\n        <BaseSearchBar\n            placeholder={props.placeholder}\n            style={{\n                borderRadius: '100px',\n                backgroundColor: '#ffffff',\n                margin: \"10px\",\n                height: \"40px\"\n            }}\n            onSearch={onSearch}\n        />\n    )\n}\n","import axios from 'axios'\nimport instance from './request'\n\n// get all hero\nexport const getHeroList = () => {\n    return instance.get('/search')\n}\n\n// search hero\nexport const searchHero = (name: string) => {\n    return instance.get(`search?q=${name}`)\n}\n\n// hero detail\nexport const heroDetail = (id: string) => {\n    return instance.get(`info?id=${id}`)\n}\n\n// get all weapon \nexport const getWeaponList = () => {\n    return instance.get(`weapon`)\n}\n\n\n// random background image\nexport const getRandomImg = () => {\n    return axios.get(`https://autumnfish.cn/api/cover/random`)\n}\n\n// text to voice\nexport const textToVoice = (text: string) => {\n    return axios.get(`http://www.liulongbin.top:3006/api/synthesize?text=${text}`)\n}","import React from 'react'\nimport { Loading as BaseLoading, Mask } from 'antd-mobile'\n\nexport const Loading = (props: any) => {\n    return (\n        <>\n            <Mask\n                color='white'\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n\n                }}\n            >\n                <div style={{ fontSize: \"4rem\" }}>\n                    <BaseLoading />\n                </div>\n            </Mask>\n        </>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/logo.8e8f68dc.png\";","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { Toast, Image, Divider } from 'antd-mobile'\nimport { SearchBar } from '../../components/common/index'\nimport { getRandomImg as getData } from '../../api'\nimport logo from '../../assets/logo.png'\n\nconst Search = () => {\n    const [randomImg, setRandomImg] = useState('')\n\n    const getRandomImg = async () => {\n        try {\n            const { data } = await getData()\n            setRandomImg(data.url)\n        } catch (error) {\n            Toast.show({\n                icon: 'fail',\n                content: '网络连接失败，请稍后刷新',\n            })\n            console.log('Home Random Image', error);\n        }\n    }\n\n    useEffect(() => {\n        getRandomImg()\n    }, [])\n\n\n    return (\n        <>\n            {/* search bar*/}\n            <SearchBar placeholder=\"请输入 英雄名称 / 称号\" />\n\n            {/* logo */}\n            <div style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                margin: \"10px 0\"\n            }}\n            >\n                <Image src={logo} style={{ height: \"80px\" }} />\n            </div>\n\n            <Divider style={{ marginTop: 5 }}>游戏简介</Divider>\n            <p style={{\n                fontSize: \"10px\",\n                textIndent: \"20px\"\n            }}>\n                英雄联盟（League of Legends）是由美国Riot Games开发，腾讯游戏运营的全新英雄对战网游。英雄联盟的主创团队由各著名游戏公司的核心美术、策划、程序人员组成，他们打造了游戏中风格特色各异的英雄，加入更加丰富的物品合成系统、地图玩法、天梯匹配机制，以及独创的“召唤师”技能、符文、天赋组合，让玩家感受不一样的英雄对战网游。\n                在游戏中，玩家将扮演一位召唤者，并选择你所信任的联盟国进入这个游戏的正义领域，为了控制瓦罗然的权利而奋战。\n            </p>\n\n            {/* random background img */}\n            <Image src={randomImg} fit='cover' />\n\n            <Divider>相关链接</Divider>\n            <p>ROIT GAME: https://www.riotgames.com/</p>\n            <p>LOL TECNET: https://lol.qq.com/</p>\n        </>\n    )\n}\n\nexport default Search","import React from 'react'\nimport { Grid, Image, Toast } from 'antd-mobile'\nimport { useNavigate } from 'react-router'\n\nexport default function Cards(props: any) {\n\n    const navigation = useNavigate()\n\n    const goDetail = (id: string) => {\n        navigation('/detail', {\n            state: { id }\n        })\n        Toast.show({\n            icon: 'loading',\n            content: '加载中…',\n        })\n    }\n\n    return (\n        <Grid columns={4} style={{ padding: \"2px\" }}>\n            {\n                props.list.map((item: any) => (\n                    <Grid.Item\n                        key={item.id}\n                        onClick={() => goDetail(item.id)}\n                    >\n                        <Image src={item.pic} fit='fill'\n                            style={{\n                                width: \"100%\",\n                                height: \"100%\",\n                            }}\n                        />\n                    </Grid.Item>\n                ))\n            }\n        </Grid>\n    )\n}\n","import React, { useState, useEffect, useMemo } from 'react'\n// import { useState, useEffect } from 'react'\nimport { getHeroList as getData } from '../../api'\nimport { SideBar, Toast } from 'antd-mobile'\nimport Cards from '../../components/Cards/Cards'\nimport { Loading } from '../../components/common/index'\n\n\nconst DEFAULT_SILDE_TABS = [\n    {\n        key: 'mage',\n        title: '法师',\n    },\n    {\n        key: 'marksman',\n        title: '射手',\n    },\n    {\n        key: 'assassin',\n        title: '刺客',\n    },\n    {\n        key: 'fighter',\n        title: '战士',\n    },\n    {\n        key: 'tank',\n        title: '坦克',\n    }, {\n        key: 'support',\n        title: '辅助',\n    },\n    {\n        key: 'all',\n        title: '全部',\n        badge: \"99+\",\n    },\n]\n\nconst Heroes = () => {\n    const [data, setData] = useState([])\n    const [heroType, setHeroType] = useState('mage')\n    const [loading, setLoading] = useState(true)\n\n    const getHeroList = async () => {\n        try {\n            const { data: res } = await getData()\n            const all = res.data || []\n            // console.log(all);\n            setData(all)\n            setLoading(false)\n        } catch (error) {\n            Toast.show({\n                icon: 'fail',\n                content: '网络连接失败，请稍后刷新',\n            })\n        }\n    }\n\n    const list = useMemo(() => {\n        const dataSource = data?.filter((item: any) => {\n            const roles: [string] = item.roles\n            if (heroType !== \"all\") {\n                return roles.includes(heroType)\n            } else {\n                return item\n            }\n        })\n        return dataSource.map(item => {\n            const { heroId, alias, title, icon, roles, keywords } = item\n            return ({\n                id: heroId,\n                nameEN: alias,\n                nameCN: title,\n                pic: icon,\n                roles,\n                keywords,\n            })\n        })\n    }, [data, heroType])\n    // console.log(list)\n\n\n    useEffect(() => {\n        getHeroList()\n    }, [])\n\n    return (\n        <div>\n            {/* left side bar */}\n            <SideBar\n                activeKey={heroType}\n                onChange={setHeroType}\n                style={{\n                    position: \"fixed\",\n                    left: \"5px\",\n                    height: \"100%\",\n                    width: '60px'\n                }}\n            >\n                {DEFAULT_SILDE_TABS.map(item => (\n                    <SideBar.Item\n                        key={item.key}\n                        title={item.title}\n                        badge={item.badge}\n                        style={{\n                            justifyContent: \"center\",\n                            padding: 0\n                        }}\n                    />\n                ))}\n            </SideBar>\n\n            {/* right content */}\n            <div style={{ paddingLeft: \"65px\" }}>\n                {\n                    loading\n                        ? (<Loading />)\n                        : (\n                            <>\n                                {\n                                    DEFAULT_SILDE_TABS.map(item => (\n                                        <div\n                                            key={item.key}\n                                            hidden={heroType !== item.key}\n                                        >\n                                            {/* amount */}\n                                            <h4 className=\"front-color-grey\" style={{ textAlign: \"right\", margin: \"0 5px 0\" }}>\n                                                <strong className=\"front-color-dark\" >{item.title}</strong>\n                                                &nbsp;共计&nbsp;\n                                                <strong className=\"front-color-dark\" >{list.length}</strong>\n                                            </h4>\n\n                                            {/* cards list */}\n                                            <Cards list={list} />\n                                        </div>\n                                    ))\n                                }\n                            </>\n                        )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Heroes","import React from 'react'\n// import { useState, useEffect, useMemo } from 'react'\n// import { getWeaponList } from \"../../api/index\"\nconst Weapon = () => {\n\n    // const getDataSource = async () => {\n    //     const { data } = await getWeaponList()\n    //     console.log(data.data);\n    // }\n\n\n    return (\n        <>\n            <div style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                transform: \"translate(-50%, -50%)\"\n            }}>\n                <h2>\n                    开发中。。。\n                </h2>\n            </div>\n        </>\n    )\n}\n\nexport default Weapon\n","import React, { useEffect, useState, useMemo } from 'react'\nimport { useLocation } from 'react-router'\nimport { heroDetail } from '../../api/index'\nimport { Toast, Divider, Image, List, Tag, Space, Grid, ImageViewer } from 'antd-mobile'\nimport { Loading } from '../../components/common/index'\n\ntype skillsType = {\n    name: any,\n    abilityIconPath: any,\n    description: any,\n    cooldown: any,\n    cost: any,\n}\ntype skinsType = {\n    name: any,\n    description: any,\n    emblemsName: any,\n    iconImg: any,\n    loadingImg: any,\n    mainImg: any,\n    sourceImg: any\n}\n\n\nconst HeroDetails = () => {\n\n    const { state } = useLocation()\n    const [dataSource, setDataSource] = useState<any>({})\n    const [viewerImage, setViewerImage] = useState(\"\")\n    const [viewerShow, setViewerShow] = useState(false)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        setLoading(true)\n        const getHeroDetails = async () => {\n            try {\n                if (state) {\n                    const { data } = await heroDetail(state.id)\n                    setDataSource(data.data)\n                    setLoading(false)\n                }\n            } catch (error) {\n                Toast.show({\n                    icon: 'fail',\n                    content: '网络连接失败，请稍后刷新',\n                })\n            }\n        }\n        getHeroDetails()\n    }, [state])\n\n    // 英雄信息\n    const hero = useMemo(() => {\n        const hero: any = dataSource.hero\n        if (dataSource.hero) {\n            const { name, alias, title, shortBio, roles, enemytips, allytips } = hero\n            return ({\n                nameEN: alias,\n                nameCN: title,\n                nickName: name,\n                description: shortBio,\n                type: roles,\n                extraInfo1: enemytips,\n                extraInfo2: allytips\n            })\n        } else {\n            return {}\n        }\n    }, [dataSource])\n\n    // 技能\n    const skills = useMemo(() => {\n        return dataSource?.spells?.map((item: skillsType) => {\n            const { name, abilityIconPath, description, cooldown, cost } = item\n            return ({\n                pic: abilityIconPath,\n                name,\n                description,\n                cooldown,\n                cost\n            })\n        }) || []\n    }, [dataSource])\n\n    // 皮肤\n    const skins = useMemo(() => {\n        return dataSource?.skins?.map((item: skinsType) => {\n            const { name, description, emblemsName, iconImg, loadingImg, mainImg, sourceImg } = item\n            return ({\n                name,\n                description,\n                emblemsName, // 皮肤级别\n                iconImg,\n                mainImg,\n                loadingImg, // 竖长图\n                sourceImg, // 横长图\n            })\n        }) || []\n    }, [dataSource])\n\n\n    const tipsLayout = (array: []) => (\n        array?.map((item: string, index: number) => (\n            <p key={index}\n                style={{\n                    padding: \"0 1rem 0\",\n                    margin: 0,\n                    fontSize: \"13px\"\n                }}\n            >\n                {item}\n            </p>\n        ))\n    )\n\n    return (\n        <>\n            {\n                loading\n                    ? <Loading />\n                    : (\n                        <>\n                            <Image src={skins[0]?.sourceImg} />\n\n                            <Divider style={{ textAlign: \"center\" }}>\n                                <h2 style={{ margin: 0 }}>{hero?.nameCN}</h2>\n                                <h4 style={{ margin: 0 }}>{hero?.nickName}</h4>\n                            </Divider>\n\n\n                            <div className=\"tags\" style={{ textAlign: \"center\" }}>\n                                <Space >\n                                    {\n                                        hero?.type?.map((item: string, index: number) => (\n                                            <Tag color='teal' key={index}>{item}</Tag>\n                                        ))\n                                    }\n                                </Space>\n                            </div>\n\n\n                            <div className=\"decription\">\n                                <p style={{ textIndent: \"26px\" }}>\n                                    {hero?.description}\n                                </p>\n                            </div>\n\n\n                            <div className=\"skills\">\n                                <Divider>\n                                    <h3 style={{ margin: 0 }}>技能介绍</h3>\n                                </Divider>\n                                <List>\n                                    {skills?.map((item: any, index: number) => (\n                                        <List.Item\n                                            key={index}\n                                            prefix={\n                                                <Image\n                                                    src={item.pic}\n                                                    style={{ borderRadius: 10 }}\n                                                    fit='cover'\n                                                    width={50}\n                                                    height={50}\n                                                />\n                                            }\n                                            description={\n                                                <p style={{ fontSize: \"13px\" }}>{item.description}</p>\n                                            }\n                                        >\n                                            <b className=\"front-color-dark\">{item.name}</b>\n                                        </List.Item>\n                                    ))}\n                                </List>\n                            </div>\n\n\n                            <div className=\"tips\">\n                                <Divider>\n                                    <h3 style={{ margin: 0 }}>注意技巧</h3>\n                                </Divider>\n\n                                <Divider contentPosition='left' className=\"front-color-dark\">\n                                    <b>我方 {hero?.nameCN}</b>\n                                </Divider>\n                                {tipsLayout(hero?.extraInfo2)}\n\n\n                                <Divider contentPosition='left' className=\"front-color-dark\">\n                                    <b>敌方 {hero?.nameCN}</b>\n                                </Divider>\n                                {tipsLayout(hero?.extraInfo1)}\n                            </div>\n\n\n                            <div className=\"skins\">\n                                <Divider>\n                                    <h3 style={{ margin: 0 }}>皮肤展示</h3>\n                                </Divider>\n                                <Grid columns={3}>\n                                    {\n                                        skins?.map((item: any, index: number) => (\n                                            !item.mainImg\n                                                ? null\n                                                : (\n                                                    <Grid.Item key={index}>\n                                                        <Image\n                                                            src={item.loadingImg}\n                                                            style={{\n                                                                width: \"100%\",\n                                                                height: \"100%\",\n                                                            }}\n                                                            onClick={() => {\n                                                                setViewerImage(item.mainImg)\n                                                                setViewerShow(true)\n                                                            }}\n                                                        />\n                                                    </Grid.Item>\n                                                )\n\n                                        ))\n                                    }\n                                </Grid>\n                                <ImageViewer\n                                    image={viewerImage}\n                                    visible={viewerShow}\n                                    onClose={() => setViewerShow(false)}\n                                />\n                            </div>\n                        </ >\n                    )\n            }\n        </>\n    )\n}\n\nexport default HeroDetails","import React from 'react';\nimport { Routes, Route } from \"react-router-dom\";\nimport { Navigate } from 'react-router-dom'\nimport Search from './pages/Search'\nimport Heroes from './pages/Heroes';\nimport Weapon from './pages/Weapon';\nimport HeroDetails from './pages/HeroDetails';\nimport { NavBar, TabBar } from './components/common/index'\n\n\nconst App: React.FC = (props) => (\n  <div className=\"App\" style={{\n    display: \"flex\",\n    justifyContent: \"center\"\n  }}>\n    {/* header */}\n    <NavBar />\n\n    <div\n      className=\"App-Content\"\n      style={{\n        paddingBottom: \"60px\",\n        paddingTop: \"45px\"\n      }}\n    >\n      <Routes>\n        <Route path=\"/\" element={Heroes()} />\n        <Route path=\"/heroes\" element={Heroes()} />\n        <Route path=\"/search\" element={Search()} />\n        <Route path=\"/Weapons\" element={Weapon()} />\n        <Route path=\"/detail\" element={HeroDetails()} />\n        <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\n      </Routes>\n    </div>\n\n\n    {/* footer navigation */}\n    <TabBar />\n  </div>\n);\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./style/index.scss\"\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}