{"version":3,"sources":["components/common/NavBar.tsx","components/common/TabBar.tsx","api/request.ts","components/common/SearchBar.tsx","api/index.ts","components/common/Loading.tsx","assets/logo.png","pages/Search/index.tsx","components/Cards/Cards.tsx","pages/Heroes/index.tsx","pages/Weapon/index.tsx","pages/HeroDetails/DetailsSkills.tsx","pages/HeroDetails/DetailsSkillsTips.tsx","pages/HeroDetails/DetailsSkins.tsx","pages/HeroDetails/DetailsTypeTags.tsx","pages/HeroDetails/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavBar","props","useState","pageName","setPageName","pathname","useLocation","useEffect","back","className","DEFAULT_TABS","key","title","icon","TeamOutline","badge","SearchOutline","AppstoreOutline","Badge","dot","TabBar","activeKey","setActiveKey","Navigation","useNavigate","onChange","value","setRouteActive","map","item","Item","instance","axios","create","baseURL","timeout","SearchBar","keyWord","setKeyword","navigation","getHero","a","name","get","data","console","log","id","heroId","state","Toast","show","content","msg","placeholder","style","borderRadius","backgroundColor","margin","height","onSearch","Loading","color","display","justifyContent","alignItems","fontSize","Search","randomImg","setRandomImg","getRandomImg","url","src","logo","marginTop","marginBottom","fit","Cards","columns","padding","list","onClick","pic","width","DEFAULT_SILDE_TABS","Heroes","setData","heroType","setHeroType","loading","setLoading","getHeroList","res","all","useMemo","filter","roles","includes","nameEN","alias","nameCN","keywords","position","left","paddingLeft","hidden","textAlign","length","Weapon","top","transform","HeroDetailsSkills","skills","index","prefix","description","textIndent","DetailsSkillsTips","setLayout","array","contentPosition","hero","extraInfo2","extraInfo1","DetailsSkins","viewerImage","setViewerImage","viewerShow","setViewerShow","skins","mainImg","loadingImg","image","visible","onClose","DetailsTypeTags","type","HeroDetails","dataSource","setDataSource","getHeroDetails","nickName","shortBio","enemytips","allytips","spells","abilityIconPath","cooldown","cost","emblemsName","iconImg","sourceImg","activeLineMode","defaultActiveKey","Tab","App","paddingBottom","paddingTop","path","element","replace","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9109c5fa.chunk.js","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom'\nimport { NavBar as BaseNavBar } from 'antd-mobile'\n\nexport const NavBar = (props: any) => {\n    const [pageName, setPageName] = useState('')\n    const { pathname } = useLocation()\n\n    useEffect(() => {\n        switch (pathname) {\n            case \"/heroes\": return setPageName(\"英雄列表\")\n            case \"/search\": return setPageName(\"查询角色\")\n            case \"/weapons\": return setPageName(\"装备列表\")\n            case \"/detail\": return setPageName(\"角色详情\")\n            default: return setPageName(\"英雄联盟信息\")\n        }\n    }, [pathname])\n\n\n    return (\n        <BaseNavBar\n            back={null}\n            className='nav nav-top'\n        >\n            {pageName}\n        </BaseNavBar>\n    )\n}\n","import React from 'react'\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router'\nimport { TabBar as BaseTabBar, Badge } from 'antd-mobile'\nimport {\n    TeamOutline,\n    AppstoreOutline,\n    SearchOutline,\n} from 'antd-mobile-icons'\n\nconst DEFAULT_TABS = [\n    {\n        key: '/heroes',\n        title: '英雄',\n        icon: <TeamOutline />,\n        badge: \"99+\",\n    },\n    {\n        key: '/search',\n        title: '查找',\n        icon: <SearchOutline />,\n        badge: null,\n    },\n    {\n        key: '/weapons',\n        title: '装备',\n        icon: <AppstoreOutline />,\n        badge: Badge.dot,\n    },\n]\n\nexport const TabBar = () => {\n    const [activeKey, setActiveKey] = useState('/heroes')\n\n    const Navigation = useNavigate()\n\n    const setRouteActive = (value: string) => {\n        setActiveKey(value)\n        Navigation(value)\n    }\n\n    return (\n        <BaseTabBar\n            activeKey={activeKey}\n            onChange={value => setRouteActive(value)}\n            className='nav nav-bottom'\n        >\n            {DEFAULT_TABS.map(item => (\n                <BaseTabBar.Item\n                    key={item.key}\n                    icon={item.icon}\n                    title={item.title}\n                    badge={item.badge}\n                />\n            ))}\n        </BaseTabBar>\n    )\n}\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://autumnfish.cn/api/lol',\n    timeout: 5000\n})\n\nexport default instance\n\n","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router'\nimport { searchHero } from '../../api/index'\nimport { SearchBar as BaseSearchBar, Toast } from 'antd-mobile'\n\ntype searchProps = {\n    placeholder: string,\n    style?: {},\n}\n\nexport const SearchBar = (props: searchProps) => {\n\n    const [keyWord, setKeyword] = useState(\"\")\n    const navigation = useNavigate()\n\n    const onSearch = (value: string) => {\n        setKeyword(value)\n        // Toast.show(`你搜索了：${value}`)\n        Toast.show({\n            icon: 'loading',\n            content: '加载中…',\n        })\n    }\n\n    const getHero = async () => {\n        const { data } = await searchHero(keyWord)\n        console.log(data);\n\n        if (!data.data) {\n            Toast.show({\n                icon: 'fail',\n                content: data.msg,\n            })\n        } else {\n            const id = data.data[0].heroId\n            navigation('/detail', {\n                state: { id }\n            })\n        }\n    }\n\n    useEffect(() => {\n        if (keyWord) {\n            getHero()\n        }\n    }, [keyWord])\n\n    return (\n        <BaseSearchBar\n            placeholder={props.placeholder}\n            style={{\n                borderRadius: '100px',\n                backgroundColor: '#ffffff',\n                margin: \"10px\",\n                height: \"40px\"\n            }}\n            onSearch={onSearch}\n        />\n    )\n}\n","import axios from 'axios'\nimport instance from './request'\n\n// get all hero\nexport const getHeroList = () => {\n    return instance.get('/search')\n}\n\n// search hero\nexport const searchHero = (name: string) => {\n    return instance.get(`search?q=${name}`)\n}\n\n// hero detail\nexport const heroDetail = (id: string) => {\n    return instance.get(`info?id=${id}`)\n}\n\n// get all weapon \nexport const getWeaponList = () => {\n    return instance.get(`weapon`)\n}\n\n\n// random background image\nexport const getRandomImg = () => {\n    return axios.get(`https://autumnfish.cn/api/cover/random`)\n}\n\n// text to voice\nexport const textToVoice = (text: string) => {\n    return axios.get(`http://www.liulongbin.top:3006/api/synthesize?text=${text}`)\n}","import React from 'react'\nimport { Loading as BaseLoading, Mask } from 'antd-mobile'\n\nexport const Loading = (props: any) => {\n    return (\n        <>\n            <Mask\n                color='white'\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n\n                }}\n            >\n                <div style={{ fontSize: \"4rem\" }}>\n                    <BaseLoading />\n                </div>\n            </Mask>\n        </>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/logo.8e8f68dc.png\";","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { Toast, Image, Divider } from 'antd-mobile'\nimport { SearchBar } from '../../components/common/index'\nimport { getRandomImg as getData } from '../../api'\nimport logo from '../../assets/logo.png'\n\nconst Search = () => {\n    const [randomImg, setRandomImg] = useState('')\n\n    const getRandomImg = async () => {\n        try {\n            const { data } = await getData()\n            setRandomImg(data.url)\n        } catch (error) {\n            Toast.show({\n                icon: 'fail',\n                content: '网络连接失败，请稍后刷新',\n            })\n            console.log('Home Random Image', error);\n        }\n    }\n\n    useEffect(() => {\n        getRandomImg()\n    }, [])\n\n\n    return (\n        <>\n            {/* search bar*/}\n            <SearchBar placeholder=\"请输入 英雄名称 / 称号\" />\n\n            {/* logo */}\n            <div style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                margin: \"10px 0\"\n            }}\n            >\n                <Image src={logo} style={{ height: \"80px\" }} />\n            </div>\n\n            <Divider style={{ marginTop: 5 }}>游戏简介</Divider>\n            <p style={{ marginBottom: 0 }}>英雄联盟（League of Legends）是由美国Riot Games开发，腾讯游戏运营的全新英雄对战网游。英雄联盟的主创团队由各著名游戏公司的核心美术、策划、程序人员组成，他们打造了游戏中风格特色各异的英雄，加入更加丰富的物品合成系统、地图玩法、天梯匹配机制，以及独创的“召唤师”技能、符文、天赋组合，让玩家感受不一样的英雄对战网游。</p>\n            <p style={{ marginTop: 0 }}>在游戏中，玩家将扮演一位召唤者，并选择你所信任的联盟国进入这个游戏的正义领域，为了控制瓦罗然的权利而奋战。</p>\n\n            {/* random background img */}\n            <Image src={randomImg} fit='cover' />\n\n            <Divider>相关链接</Divider>\n            <p>ROIT GAME: https://www.riotgames.com/</p>\n            <p>LOL TECNET: https://lol.qq.com/</p>\n        </>\n    )\n}\n\nexport default Search","import React from 'react'\nimport { Grid, Image, Toast } from 'antd-mobile'\nimport { useNavigate } from 'react-router'\n\nexport default function Cards(props: any) {\n\n    const navigation = useNavigate()\n\n    const goDetail = (id: string) => {\n        navigation('/detail', {\n            state: { id }\n        })\n        Toast.show({\n            icon: 'loading',\n            content: '加载中…',\n        })\n    }\n\n    return (\n        <Grid columns={4} style={{ padding: \"2px\" }}>\n            {\n                props.list.map((item: any) => (\n                    <Grid.Item\n                        key={item.id}\n                        onClick={() => goDetail(item.id)}\n                    >\n                        <Image src={item.pic} fit='fill'\n                            style={{\n                                width: \"100%\",\n                                height: \"100%\",\n                            }}\n                        />\n                    </Grid.Item>\n                ))\n            }\n        </Grid>\n    )\n}\n","import React, { useState, useEffect, useMemo } from 'react'\n// import { useState, useEffect } from 'react'\nimport { getHeroList as getData } from '../../api'\nimport { SideBar, Toast } from 'antd-mobile'\nimport Cards from '../../components/Cards/Cards'\nimport { Loading } from '../../components/common/index'\n\n\nconst DEFAULT_SILDE_TABS = [\n    {\n        key: 'mage',\n        title: '法师',\n    },\n    {\n        key: 'marksman',\n        title: '射手',\n    },\n    {\n        key: 'assassin',\n        title: '刺客',\n    },\n    {\n        key: 'fighter',\n        title: '战士',\n    },\n    {\n        key: 'tank',\n        title: '坦克',\n    }, {\n        key: 'support',\n        title: '辅助',\n    },\n    {\n        key: 'all',\n        title: '全部',\n        badge: \"99+\",\n    },\n]\n\nconst Heroes = () => {\n    const [data, setData] = useState([])\n    const [heroType, setHeroType] = useState('mage')\n    const [loading, setLoading] = useState(true)\n\n    const getHeroList = async () => {\n        try {\n            const { data: res } = await getData()\n            const all = res.data || []\n            // console.log(all);\n            setData(all)\n            setLoading(false)\n        } catch (error) {\n            Toast.show({\n                icon: 'fail',\n                content: '网络连接失败，请稍后刷新',\n            })\n        }\n    }\n\n    const list = useMemo(() => {\n        const dataSource = data?.filter((item: any) => {\n            const roles: [string] = item.roles\n            if (heroType !== \"all\") {\n                return roles.includes(heroType)\n            } else {\n                return item\n            }\n        })\n        return dataSource.map(item => {\n            const { heroId, alias, title, icon, roles, keywords } = item\n            return ({\n                id: heroId,\n                nameEN: alias,\n                nameCN: title,\n                pic: icon,\n                roles,\n                keywords,\n            })\n        })\n    }, [data, heroType])\n    // console.log(list)\n\n\n    useEffect(() => {\n        getHeroList()\n    }, [])\n\n    return (\n        <div>\n            {/* left side bar */}\n            <SideBar\n                activeKey={heroType}\n                onChange={setHeroType}\n                style={{\n                    position: \"fixed\",\n                    left: \"5px\",\n                    height: \"100%\",\n                    width: '60px'\n                }}\n            >\n                {DEFAULT_SILDE_TABS.map(item => (\n                    <SideBar.Item\n                        key={item.key}\n                        title={item.title}\n                        badge={item.badge}\n                        style={{\n                            justifyContent: \"center\",\n                            padding: 0\n                        }}\n                    />\n                ))}\n            </SideBar>\n\n            {/* right content */}\n            <div style={{ paddingLeft: \"65px\" }}>\n                {\n                    loading\n                        ? (<Loading />)\n                        : (\n                            <>\n                                {\n                                    DEFAULT_SILDE_TABS.map(item => (\n                                        <div\n                                            key={item.key}\n                                            hidden={heroType !== item.key}\n                                        >\n                                            {/* amount */}\n                                            <h4 className=\"front-color-grey\" style={{ textAlign: \"right\", margin: \"0 5px 0\" }}>\n                                                <strong className=\"front-color-dark\" >{item.title}</strong>\n                                                &nbsp;共计&nbsp;\n                                                <strong className=\"front-color-dark\" >{list.length}</strong>\n                                            </h4>\n\n                                            {/* cards list */}\n                                            <Cards list={list} />\n                                        </div>\n                                    ))\n                                }\n                            </>\n                        )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Heroes","import React from 'react'\n// import { useState, useEffect, useMemo } from 'react'\n// import { getWeaponList } from \"../../api/index\"\nconst Weapon = () => {\n\n    // const getDataSource = async () => {\n    //     const { data } = await getWeaponList()\n    //     console.log(data.data);\n    // }\n\n\n    return (\n        <>\n            <div style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                transform: \"translate(-50%, -50%)\"\n            }}>\n                <h2>\n                    开发中。。。\n                </h2>\n            </div>\n        </>\n    )\n}\n\nexport default Weapon\n","import React from 'react'\nimport { Divider, Image, List } from 'antd-mobile'\n\nexport default function HeroDetailsSkills(props: any) {\n    return (\n        <>\n            {/* <Divider><h3 style={{ margin: 0 }}>技能介绍</h3></Divider> */}\n            <List>\n                {props.skills?.map((item: any, index: number) => (\n                    <List.Item\n                        key={index}\n                        prefix={\n                            <Image\n                                src={item.pic}\n                                style={{ borderRadius: 10 }}\n                                fit='cover'\n                                width={45}\n                                height={45}\n                            />\n                        }\n                        description={\n                            <p style={{ textIndent: 0, padding: 0, marginTop: 5 }}>\n                                {item.description}\n                            </p>\n                        }\n                    >\n                        <b className=\"front-color-dark\">{item.name}</b>\n                    </List.Item>\n                ))}\n            </List>\n        </>\n    )\n}\n","import React from 'react'\nimport { Divider } from 'antd-mobile'\n\nexport default function DetailsSkillsTips(props: any) {\n\n    const setLayout = (title: string, array: []) => (\n        <>\n            <Divider contentPosition='left' className=\"front-color-dark\">\n                <h3 style={{ margin: 0 }}>\n                    <b>{title} {props.hero?.nameCN}</b>\n                </h3>\n            </Divider>\n            {\n                array?.map((item: string, index: number) => (\n                    <p key={index}\n                        style={{\n                            padding: 0,\n                            margin: 0,\n                            textIndent: 0\n                        }}\n                    >\n                        {item}\n                    </p>\n                ))\n            }\n        </>\n    )\n\n    const hero = props.hero\n\n    return (\n        <>\n            {/* 我方  */}\n            {setLayout('我方', hero?.extraInfo2)}\n\n            {/* 敌方 */}\n            {setLayout(\"敌方\", hero?.extraInfo1)}\n        </>\n    )\n}\n","import React, { useState } from 'react'\nimport { Divider, Image, Grid, ImageViewer } from 'antd-mobile'\n\n\nexport default function DetailsSkins(props: any) {\n    const [viewerImage, setViewerImage] = useState(\"\")\n    const [viewerShow, setViewerShow] = useState(false)\n\n    return (\n        <>\n            {/* <Divider> <h3 style={{ margin: 0 }}>皮肤展示</h3></Divider> */}\n            <Grid columns={3}>\n                {\n                    props.skins?.map((item: any, index: number) => (\n                        !item.mainImg\n                            ? null\n                            : (\n                                <Grid.Item key={index}>\n                                    <Image\n                                        src={item.loadingImg}\n                                        style={{\n                                            width: \"100%\",\n                                            height: \"100%\",\n                                        }}\n                                        onClick={() => {\n                                            setViewerImage(item.mainImg)\n                                            setViewerShow(true)\n                                        }}\n                                    />\n                                </Grid.Item>\n                            )\n\n                    ))\n                }\n            </Grid>\n            <ImageViewer\n                image={viewerImage}\n                visible={viewerShow}\n                onClose={() => setViewerShow(false)}\n            />\n        </>\n    )\n}\n","import React from 'react'\nimport { Tag, Space } from 'antd-mobile'\n\nexport default function DetailsTypeTags(props: any) {\n    return (\n        <div style={{ textAlign: \"center\" }}>\n            <Space>\n                {\n                    props.hero?.type?.map((item: string, index: number) => (\n                        <Tag color='teal' key={index}>{item}</Tag>\n                    ))\n                }\n            </Space>\n        </div>\n    )\n}\n","import React, { useEffect, useState, useMemo } from 'react'\nimport { useLocation } from 'react-router'\nimport { heroDetail } from '../../api/index'\nimport { Toast, Divider, Image, Tabs, Badge } from 'antd-mobile'\nimport { Loading } from '../../components/common/index'\nimport DetailsSkills from \"./DetailsSkills\"\nimport DetailsSkillsTips from \"./DetailsSkillsTips\"\nimport DetailsSkins from \"./DetailsSkins\"\nimport DetailsTypeTags from \"./DetailsTypeTags\"\n\ntype skillsType = {\n    name: any,\n    abilityIconPath: any,\n    description: any,\n    cooldown: any,\n    cost: any,\n}\ntype skinsType = {\n    name: any,\n    description: any,\n    emblemsName: any,\n    iconImg: any,\n    loadingImg: any,\n    mainImg: any,\n    sourceImg: any\n}\n\n\nconst HeroDetails = () => {\n\n    const { state } = useLocation()\n    const [dataSource, setDataSource] = useState<any>({})\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        setLoading(true)\n        const getHeroDetails = async () => {\n            try {\n                if (state) {\n                    const { data } = await heroDetail(state.id)\n                    setDataSource(data.data)\n                    setLoading(false)\n                }\n            } catch (error) {\n                Toast.show({\n                    icon: 'fail',\n                    content: '网络连接失败，请稍后刷新',\n                })\n            }\n        }\n        getHeroDetails()\n    }, [state])\n\n    // 英雄信息\n    const hero = useMemo(() => {\n        const hero: any = dataSource.hero\n        if (dataSource.hero) {\n            const { name, alias, title, shortBio, roles, enemytips, allytips } = hero\n            return ({\n                nameEN: alias,\n                nameCN: title,\n                nickName: name,\n                description: shortBio,\n                type: roles,\n                extraInfo1: enemytips,\n                extraInfo2: allytips\n            })\n        } else {\n            return {}\n        }\n    }, [dataSource])\n\n    // 技能\n    const skills = useMemo(() => {\n        return dataSource?.spells?.map((item: skillsType) => {\n            const { name, abilityIconPath, description, cooldown, cost } = item\n            return ({\n                pic: abilityIconPath,\n                name,\n                description,\n                cooldown,\n                cost\n            })\n        }) || []\n    }, [dataSource])\n\n    // 皮肤\n    const skins = useMemo(() => {\n        return dataSource?.skins?.map((item: skinsType) => {\n            const { name, description, emblemsName, iconImg, loadingImg, mainImg, sourceImg } = item\n            return ({\n                name,\n                description,\n                emblemsName, // 皮肤级别\n                iconImg,\n                mainImg,\n                loadingImg, // 竖长图\n                sourceImg, // 横长图\n            })\n        }) || []\n    }, [dataSource])\n\n    return (\n        <>\n            {\n                loading\n                    ? <Loading />\n                    : (\n                        <>\n                            {/* top img */}\n                            <Image src={skins[0]?.sourceImg} />\n\n                            {/* title name  */}\n                            <Divider style={{ textAlign: \"center\" }}>\n                                <h2 style={{ margin: 0 }}>{hero?.nameCN}</h2>\n                                <h4 style={{ margin: 0 }}>{hero?.nickName}</h4>\n                            </Divider>\n\n                            {/* tags */}\n                            <DetailsTypeTags hero={hero} />\n\n                            {/* story */}\n                            <div className=\"decription\">\n                                <p style={{ textIndent: \"26px\" }}>\n                                    {hero?.description}\n                                </p>\n                            </div>\n\n                            <Tabs activeLineMode=\"full\" defaultActiveKey=\"skills\">\n                                {/* skills tips */}\n                                <Tabs.Tab title='针对技巧' key='tips'>\n                                <DetailsSkillsTips hero={hero} />\n                            </Tabs.Tab>\n\n                            {/* skills */}\n                            <Tabs.Tab title='技能简介' key='skills'>\n                                < DetailsSkills skills={skills} />\n                            </Tabs.Tab>\n\n                            {/* skins */}\n                            <Tabs.Tab title={<Badge content={skins.length}>皮肤一览</Badge>} key='skins'>\n                                <DetailsSkins skins={skins} />\n                            </Tabs.Tab>\n                        </Tabs>\n                        </ >\n    )\n}\n        </>\n    )\n}\n\nexport default HeroDetails","import React from 'react';\nimport { Routes, Route } from \"react-router-dom\";\nimport { Navigate } from 'react-router-dom'\nimport Search from './pages/Search'\nimport Heroes from './pages/Heroes';\nimport Weapon from './pages/Weapon';\nimport HeroDetails from './pages/HeroDetails';\nimport { NavBar, TabBar } from './components/common/index'\n\n\nconst App: React.FC = (props) => (\n  <div className=\"App\" style={{\n    display: \"flex\",\n    justifyContent: \"center\"\n  }}>\n    {/* header */}\n    <NavBar />\n\n    <div\n      className=\"App-Content\"\n      style={{\n        paddingBottom: \"60px\",\n        paddingTop: \"45px\"\n      }}\n    >\n      <Routes>\n        <Route path=\"/\" element={Heroes()} />\n        <Route path=\"/heroes\" element={Heroes()} />\n        <Route path=\"/search\" element={Search()} />\n        <Route path=\"/Weapons\" element={Weapon()} />\n        <Route path=\"/detail\" element={HeroDetails()} />\n        <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\n      </Routes>\n    </div>\n\n\n    {/* footer navigation */}\n    <TabBar />\n  </div>\n);\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./style/index.scss\"\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}